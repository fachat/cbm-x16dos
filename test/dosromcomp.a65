

	*=$fe30

DOS	=$4000

dos_seclstn	=DOS + 3 * 0
dos_sectlk	=DOS + 3 * 1
dos_iecin	=DOS + 3 * 2
dos_iecout	=DOS + 3 * 3
dos_untlk	=DOS + 3 * 4	; note: currently no-op
dos_unlsn	=DOS + 3 * 5
dos_listn	=DOS + 3 * 6
dos_talk	=DOS + 3 * 7	; note: currently same as listn

dos_init	=DOS + 3 * 8

; banking

BANK		=$e802

DOSBANK		=14	; DOS runs in memory mapped from $070000-$077fff
BASBANK		=0	; BASIC runs in bank 0

; variables

flags	=$03fe	; for testing for now

curdev		=$d4
cursec		=$d3
status		=$96

; DOS bank vars

dos_status	=$0287

; constants (flags)

DOS_TALK	=$80
DOS_LISTEN	=$40

#if 1
	
install	.(
	lda #%01100000
	sta $e801	; make ROM writable

	lda #$4c	; JMP
	ldx #<talk_listn_unlstn
	ldy #>talk_listn_unlstn
	sta $f0d8	; note this is called for TALK, LISTEN and UNLISTEN
	stx $f0d9	; with either $20, $40, or $3F in A (and PHA'd)
	sty $f0da

	ldx #<seclstn
	ldy #>seclstn
	sta $f145
	stx $f146
	sty $f147

	ldx #<untlk
	ldy #>untlk
	sta $f1ae
	stx $f1af
	sty $f1b0

	ldx #<iecin
	ldy #>iecin
	sta $f1c2
	stx $f1c3
	sty $f1c4

	ldx #<sectlk
	ldy #>sectlk
	sta $f195
	stx $f196
	sty $f197

	ldx #<iecout
	ldy #>iecout
	sta $f19e
	stx $f19f
	sty $f1a0
	lda #$ea	; NOP
	sta $f1a1

	lda #%11100000
	sta $e801	; write protect ROM

	php
	sei
	lda #DOSBANK
	sta BANK
	jsr dos_init
	lda #BASBANK
	sta BANK
	plp
	rts
	.)

#endif

	; AC is free. It needs to be #$40 when going back
talk_listn_unlstn .(
	cmp #$3f
	beq unlisten

	php
	phx
	sei
	lda curdev
	ldx #DOSBANK
	stx BANK
	jsr dos_talk	; note: DOS currently has same code for talk && listen 
	ldx #BASBANK
	stx BANK
	tsx
	lda $0103,x 	; $40 for talk, $20 for listen
	bcs no_dev

	; move the IEEE TALK/LISTEN commands into right bits for flags
	asl
	.assert DOS_LISTEN == $40, "check on flag"
	.assert DOS_TALK == $80, "check on flag"
	ora flags
	sta flags
	plx
	plp
	pla		; pop TALK/LISTEN flag saved by ROM 
	clc
	rts

no_dev	asl
	eor #$ff
	and flags
	sta flags
	plx
	plp
orig_unlsn
	lda $e840
	jmp $f0db

unlisten
	.assert DOS_LISTEN == $40, "check on flag"
	bit flags
	bvc orig_unlsn
	php
	sei
	lda #DOSBANK
	sta BANK
	jsr dos_unlsn
	lda #BASBANK
	sta BANK
	plp
	pla
	rts
	.)

sectlk	.(
	.assert DOS_TALK == $80, "check on flag"
	bit flags
	bpl not_dos
	phx
	php
	sei
	ldx #DOSBANK
	stx BANK
	jsr dos_sectlk
	ldx #BASBANK
	stx BANK
	plp
	plx
	rts
not_dos
	jsr $f109
	jmp $f198	
	.)

iecout	.(
	.assert DOS_LISTEN == $40, "check on flag"
	bit flags
	bvc not_dos
	phx
	php
	sei
	ldx #DOSBANK
	stx BANK
	jsr dos_iecout
	lda dos_status
	ldx #BASBANK
	stx BANK
	ora status
	sta status
	plp
	plx
	rts
not_dos
	bit $a0
	bmi l1
	jmp $f1a2
l1	jmp $f1a6
	.)

untlk	.(
	.assert DOS_TALK == $80, "check on flag"
	bit flags
	bpl not_dos
	; no-op
	rts
not_dos	
	lda $e840
	jmp $f1b1	
	rts
	.)

seclstn	.(
	.assert DOS_LISTEN == $40, "check on flag"
	bit flags
	bvc not_dos
	phx
	php
	sei
	ldx #DOSBANK
	stx BANK
	jsr dos_seclstn
	ldx #BASBANK
	stx BANK
	plp
	plx
	rts

not_dos	jsr $f109
	jmp $f148
	.)

iecin	.(
	.assert DOS_TALK == $80, "check on flag"
	bit flags
	bpl not_dos
	php
	phx
	phy
	sei
	ldx #DOSBANK
	stx BANK
	jsr dos_iecin
	ldy dos_status
	ldx #BASBANK
	stx BANK
	pha
	tya
	ora status
	sta status
	pla
	ply
	plx
	plp
	rts
not_dos
	sta $e821
	jmp $f1c5
	.)

	

